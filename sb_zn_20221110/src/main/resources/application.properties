

#server.ssl.key-store=classpath:aaaa.pfx
#server.ssl.key-store-password=re4cn2fo
#server.ssl.key-password=re4cn2fo

#server.port=80

##server.ssl.enabled=true
#server.ssl.key-store=classpath:aaaa.pfx
#server.ssl.key-store-password=re4cn2fo
#server.ssl.key-store-type=JKS

# server.port 在nx.ssl.enabled=true，配置为443，=false配置为80
server.port=80
spring.application.name=znx

spring.servlet.multipart.max-file-size=3900MB
spring.servlet.multipart.max-request-size=3900MB

# redis
spring.redis.host=192.168.1.14
spring.redis.port=6379
spring.redis.password=guoguang
spring.redis.database=10

#------------------nxconf配置开始--------------------

# nx ssl 配置
nx.ssl.enabled=false
nx.ssl.port=80
nx.ssl.sslPort=443
nx.ssl.keyStore=classpath:xxxxxx.pfx
nx.ssl.keyStorePassword=re4cn2fo
nx.ssl.keyStoreType=JKS

# !!! 注意，adminPath 不要与已经接口重复!!!!
nx.adminPath=nxAdmin

# 配置过滤器是否启用,不配置默认为不启用：[nx.fileter-enable.过滤器名称=true/false]
nx.fileter-enable.LogFilter=false
nx.fileter-enable.TokenFilter=false
nx.fileter-enable.QPSLimitFilter=false
#nx.fileter-enable.CacheFilter=true

# 多域名配置，如下：
# 配置 z1.com 访问 http://192.168.2.44:8888/
# 配置 z2.com 访问 http://192.168.2.44:11180/
# .url[0]支持多个URL，负责均衡策略见 nx.balance-strategy
nx.server.nameNode[0].name=z1.com
nx.server.nameNode[0].balanceStrategy=RANDOM
nx.server.nameNode[0].url[0]=http://192.168.2.44:8888/
nx.server.nameNode[0].qps=10000

nx.server.nameNode[1].name=z2.com
nx.server.nameNode[1].balanceStrategy=RANDOM
nx.server.nameNode[1].url[0]=http://192.168.2.44:11180/
nx.server.nameNode[1].qps=10000

nx.server.nameNode[2].name=localhost
nx.server.nameNode[2].balanceStrategy=RANDOM
nx.server.nameNode[2].url[0]=https://img1.baidu.com/it/u=1960110688,1786190632&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=281
nx.server.nameNode[2].url[1]=https://img1.baidu.com/it/u=2812417321,4100104782&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=750
nx.server.nameNode[2].url[2]=http://192.168.1.14:180/
nx.server.nameNode[2].url[3]=https://img2.woyaogexing.com/2023/05/22/61da00fda90cbab8a16db483b737aa06.jpg
nx.server.nameNode[2].url[4]=https://image.so.com/
nx.server.nameNode[2].qps=100

nx.server.nameNode[3].name=127.0.0.1
nx.server.nameNode[3].balanceStrategy=RANDOM
nx.server.nameNode[3].url[0]=http://192.168.1.6:18888/
#nx.server.nameNode[3].url[0]=http://192.168.1.14:180/
nx.server.nameNode[3].qps=10000

nx.server.nameNode[4].name=zz.aa
nx.server.nameNode[4].balanceStrategy=RANDOM
nx.server.nameNode[4].url[0]=https://aaaa.bbbb/
nx.server.nameNode[4].qps=10000

# token 配置
nx.token.exclude[0]=/file
nx.token.exclude[1]=/group
nx.token.exclude[2]=/
nx.token.exclude[3]=/search

# 默认不校验token的 js 、css
nx.token.excludeSuffix[0]=.js
nx.token.excludeSuffix[1]=.css


# 配置转发到后端服务器的负载均衡策略 @see BalanceStrategyEnum
nx.balance-strategy=RANDOM
#nx.balance-strategy=ROUND_ROBIN
#nx.balance-strategy=HASH_IP
#nx.balance-strategy=HASH_URI

# 配置GET请求的缓存，默认1秒过期
nx.cache.second=1
#------------------nxconf配置结束--------------------


#-------------------------freemarker 配置开始----------------------------------------
# 是否允许HttpServletRequest属性覆盖(隐藏)控制器生成的同名模型属性。
spring.freemarker.allow-request-override=false
# 是否允许HttpSession属性覆盖(隐藏)控制器生成的同名模型属性。
spring.freemarker.allow-session-override=false
# 是否启用模板缓存。
spring.freemarker.cache=false
# 模板编码。
spring.freemarker.charset=UTF-8
# 是否检查模板位置是否存在。
spring.freemarker.check-template-location=true
# Content-Type value.
spring.freemarker.content-type=text/html
# 是否启用freemarker
spring.freemarker.enabled=true
# 设定所有request的属性在merge到模板的时候，是否要都添加到model中.
spring.freemarker.expose-request-attributes=false
# 是否在merge模板的时候，将HttpSession属性都添加到model中
spring.freemarker.expose-session-attributes=false
# 设定是否以springMacroRequestContext的形式暴露RequestContext给Spring’s macro library使用
spring.freemarker.expose-spring-macro-helpers=true
# 是否优先从文件系统加载template，以支持热加载，默认为true
spring.freemarker.prefer-file-system-access=true
# 设定模板的后缀.
spring.freemarker.suffix=.html
# 设定模板的加载路径，多个以逗号分隔，默认: 
spring.freemarker.template-loader-path=classpath:/templates/
# 设定FreeMarker keys.
spring.freemarker.settings.template_update_delay=0
spring.freemarker.settings.default_encoding=UTF-8
spring.freemarker.settings.classic_compatible=true
#-------------------------freemarker 配置结束----------------------------------------